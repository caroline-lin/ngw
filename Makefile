# Simple Makefile for running a hot server with
# parceljs bundler and flask as backend

# Comments on Makefile syntax
# @ - suppress print output
# \ - line break; lines in Makefiles are run in different bash subshells
# 	so it's not possible to do complex scripting without using line break
#	effectively a single-line script
# # unindented comments - comments which are indented inside a target
# 	are echoed

SHELL=/bin/bash
SERVER_BASE=./server
PORT=8008

# start hotloading server.
run-dev: start-dev-server
# rebuild TSX project files whenever a change is made
	gnome-terminal -- bash -c 'ag . src/ -l | entr make build'

start-dev-server:
# use venv and
# verify if version of flask supports multifile watching
	@source $(SERVER_BASE)/venv/bin/activate; \
	if [ $(shell flask --version | grep "Flask" | sed 's/[^0-9]*//g') -lt 11 ]; \
	then \
		echo 'Version of flask is probably too low; are you using 1.1-dev?'; \
		echo 'Not launching flask...'; \
	else \
		# flask hotwatch; \
		export FLASK_RUN_EXTRA_FILES=$(echo app/*/* | tr " " ":"); \
		export FLASK_APP=$(SERVER_BASE)/app; \
		export FLASK_ENV=development; \
		flask run --port $(PORT) & \
	fi
	
build:
# use parcel to bundle assets
	@parcel build src/index.html --public-url ./ 
# copy index to templates
	-mkdir $(SERVER_BASE)/app/templates 
	-mkdir $(SERVER_BASE)/app/code
#-rm $(SERVER_BASE)/app/templates/index.html
	@cp dist/index.html $(SERVER_BASE)/app/templates/index.html
# copy other files generated by parcel to code assets dir
#-rm $(SERVER_BASE)/app/code/*
	@find dist/ -type f ! -name index.html -exec cp -t $(SERVER_BASE)/app/code/ {} +

clean:
	rm $(SERVER_BASE)/app/code/*

